#include<bits/stdc++.h>
using namespace std;
void heapify(int a[],int n,int i)
{
    int largest=i; //here i take the current value as i
    int left=2*i;//takes it left value
    int right=2*i+1;//takes it right value

    if(left<=n&&a[left]>a[largest])//then i checked among left and right which value is larger   and i also check so that the value does not cross total size of the array
    {
        largest=left;//the value whcih is large i set the larget index that value
    }
     if(right<=n&&a[right]>a[largest])
    {
        largest=right;
    }

    if(largest!=i)
    {
        swap(a[i],a[largest]);//if i found a larger value then i swap it and again call functiion 
        heapify(a,n,largest);
    }
}

void heapSort(int a[],int n)
{
    for(int i=n;i>1;i--)
    {
        swap(a[1],a[i]);
        heapify(a,i-1,1);
    }
}
void buildHeap(int a[],int n)
{
    for(int i=n/2;i>0;i--)
    {
        heapify(a,n,i);
    }
}

int main()
{

    int n;
    cin>>n;
    int a[n];
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    
    buildHeap(a,n);//in heapsort i used both heapsort and the build heap function 

    heapSort(a,n);

    for(int i=1;i<=n;i++)
    {
        cout<<a[i]<<" ";
    }cout<<endl;

    return 0;

}
